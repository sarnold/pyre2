name: Wheels

on:
  workflow_dispatch:
  #pull_request:
  push:
    branches:
      - master

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '3.10'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.3
        env:
          # configure cibuildwheel to build native archs ('auto'), and some
          # emulated ones, plus cross-compile on macos
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: auto arm64
          CIBW_TEST_SKIP: "*_arm64 *universal2:arm64 *linux_i686"
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2010
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-* cp311-*
          CIBW_SKIP: "*musllinux* cp311-*i686"
          CIBW_BEFORE_ALL_LINUX: >
            yum -y install epel-release && yum install -y re2-devel ninja-build
          CIBW_BEFORE_ALL_MACOS: >
            brew install re2 pybind11
          #CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.14
          CIBW_BEFORE_ALL_WINDOWS: >
            vcpkg install re2:x64-windows
            && vcpkg integrate install
          CIBW_ENVIRONMENT_WINDOWS: 'CMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake'
          CIBW_TEST_REQUIRES: pytest
          CIBW_TEST_COMMAND: pytest -v {package}/tests/test_re.py

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
